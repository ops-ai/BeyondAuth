# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '2090ed42-3209-4e98-bd10-118042d5815e'
  imageNameAccount: 'beyondauth-account'
  imageNameAuth: 'beyondauth-auth'
  imageNameIdp: 'beyondauth-idp'
  tag: '$(Build.BuildId)'
  solution: '**/*.sln'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'
    
    - task: gitversion/execute@0
      inputs:
        updateAssemblyInfo: true
        #updateAssemblyInfoFilename: '$(Build.SourcesDirectory)\src\AssemblyInfo.cs'
        additionalArguments: '/output buildserver'
        
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.100'
        
    - task: CmdLine@2
      inputs:
        script: 'mkdir charts'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-account-stg.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-account-stg.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-account-prod.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-account-prod.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-auth-stg.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-auth-stg.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-auth-prod.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-auth-prod.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-idp-stg.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-idp-stg.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'
    - task: CmdLine@2
      inputs:
        script: 'sed -e ''s/latest/$(tag)/g'' ba-idp-prod.yaml > $(Build.ArtifactStagingDirectory)/charts/ba-idp-prod.yml'
        workingDirectory: '$(Build.SourcesDirectory)/src/charts/'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/charts'
        ArtifactName: 'charts'
        publishLocation: 'Container'
        
    - task: CmdLine@2
      inputs:
        script: 'rm -rf charts'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'
        
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        configuration: $(buildConfiguration)

    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '$(solution)'
        versioningScheme: 'byBuildNumber'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'packages'
        publishLocation: 'Container'
        
    - task: Docker@2
      displayName: Build Account image
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageNameAccount)'
        command: 'build'
        Dockerfile: 'src/Authentication/Dockerfile'
        buildContext: 'src'
        tags: '$(tag)'
        arguments: '--build-arg VERSION=$(tag)'
    - task: Docker@2
      displayName: Push Account image to container registry
      inputs:
        containerRegistry: 'opsairegistry'
        repository: '$(imageNameAccount)'
        command: 'push'

    - task: Docker@2
      displayName: Build Auth image
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageNameAuth)'
        command: 'build'
        Dockerfile: 'src/AuthorizationServer/Dockerfile'
        buildContext: 'src'
        tags: '$(tag)'
        arguments: '--build-arg VERSION=$(tag)'
    - task: Docker@2
      displayName: Push Auth image to container registry
      inputs:
        containerRegistry: 'opsairegistry'
        repository: '$(imageNameAuth)'
        command: 'push'
        
    - task: Docker@2
      displayName: Build IdP image
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageNameIdp)'
        command: 'build'
        Dockerfile: 'src/IdentityManager/Dockerfile'
        buildContext: 'src'
        tags: '$(tag)'
        arguments: '--build-arg VERSION=$(tag)'
    - task: Docker@2
      displayName: Push IdP image to container registry
      inputs:
        containerRegistry: 'opsairegistry'
        repository: '$(imageNameIdp)'
        command: 'push'