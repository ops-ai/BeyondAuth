# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'src/Authorization.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 
    checkLatest: true

- task: gitversion/setup@0
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  inputs:
    updateAssemblyInfo: true
    updateAssemblyInfoFilename: '$(Build.SourcesDirectory)\src\AssemblyInfo.cs'
    additionalArguments: '/output buildserver'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'
    vstsFeed: 'a176869a-9c3b-49c9-a033-c415e60df8aa'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--no-restore -c $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '$(solution)'
    arguments: '--no-restore --no-build -c $(buildConfiguration) --collect:"XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--no-restore --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: '$(solution)'
    publishWebProjects: true
    modifyOutputPath: true
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
