@model Authentication.Models.Account.LoginViewModel

<div class="container account-container py-5 my-auto">
  <div class="row">

    <h1 class="text-center mb-3">Login</h1>

    @if (Model.EnableLocalLogin)
    {
      <form asp-route="Login" class="col-12 col-md-8 offset-md-2 col-lg-6 offset-lg-3 needs-validation" novalidate>
        <input type="hidden" asp-for="ReturnUrl" />
        <div class="form-floating mb-3 has-validation">
          <input type="text" class="form-control" placeholder="Your Email Address *" asp-for="Email" autofocus required />@*pattern=".+@@.+\..+"*@
          <label asp-for="Email" class="form-label">Email Address</label>
        </div>
        <div class="form-floating">
          <input type="password" class="form-control" placeholder="Your Password *" asp-for="Password" autocomplete="off" required />
          <label asp-for="Password" class="form-label">Password</label>
        </div>
        @Html.ValidationMessageFor(m => m.Email)
        @Html.ValidationMessageFor(m => m.Password)
        <div class="d-flex justify-content-between my-3">
          @if (Model.AllowRememberLogin)
          {
            <div class="form-check">
              <input class="form-check-input" type="checkbox" asp-for="RememberLogin">
              <label class="form-check-label" asp-for="RememberLogin">
                Remember Me
              </label>
            </div>
          }
          @if (Model.AllowPasswordReset)
          {
            <a asp-action="ForgotPassword" asp-controller="PasswordReset" class="link-dark">Forgot Password?</a>
          }
        </div>

        <button class="btn btn-primary btn-lg w-100" name="button" type="submit" value="login">Login</button>
        
        @if (Model.SignupUrl != null)
        {
          <div class="text-center mt-3">
            @Model.SignupMessage <a href="@Model.SignupUrl" class="link-dark">@Model.SignupText</a>
          </div>
        }
        <input type="hidden" asp-for="BrowserId" />
      </form>
    }

    @if (Model.ExternalProviders.Any())
    {
      <div class="col-12 col-md-8 offset-md-2 col-lg-6 offset-lg-3">

        @if (Model.EnableLocalLogin)
        {
          <div class="divider mt-5 mb-3">
            <small class="divider-text">or login using</small>
          </div>
        }

        <div class="text-center">
          @foreach (var provider in Model.ExternalProviders)
          {
            <a class="btn btn-primary" asp-controller="External" asp-action="Challenge" asp-route-provider="@provider.AuthenticationScheme" asp-route-returnUrl="@Model.ReturnUrl">
              @provider.DisplayName
              @if (!string.IsNullOrEmpty(provider.Icon))
              {
                <i class="fa-brands fa-@provider.Icon"></i>
              }
            </a>
          }
        </div>

      </div>
    }

    @if (!Model.EnableLocalLogin && !Model.ExternalProviders.Any())
    {
      <div class="alert alert-warning">
        <strong>Invalid login request</strong>
        There are no login schemes configured for this client.
      </div>
    }
  </div>
</div>
