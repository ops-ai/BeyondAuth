# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: gittools.gitversion.gitversion-task.GitVersion@4
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true
    updateAssemblyInfoFilename: '**\Properties\AssemblyInfo.cs'
    additionalArguments: '/output buildserver'
    preferBundledVersion: false

- task: dependency-check.dependencycheck.dependency-check-build-task.dependency-check-build-task@5
  displayName: 'Dependency Check'
  inputs:
    projectName: '$(Build.DefinitionName)'
    scanPath: '$(build.artifactstagingdirectory)'
    format: ALL
    additionalArguments: '--disableBundleAudit --disableRubygems --disableNodeJS --disablePyPkg --disablePyDist --suppression "$(Build.SourcesDirectory)\cve-suppression.xml" --out "$(Agent.BuildDirectory)"'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'ops-ai'
    scannerMode: 'MSBuild'
    projectKey: 'ops-ai_authorization'
    projectName: 'ops.ai Authorization'
    projectVersion: '0.1'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**\*test*.csproj'
    arguments: '--no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="$(Agent.TempDirectory)\opencover.xml"'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

